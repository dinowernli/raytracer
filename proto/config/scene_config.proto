// The MIT License (MIT)
//
// Copyright (c) 2015 dinowernli
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

package raytracer;

import "proto/scene/scene_data.proto";
import "proto/util/color_data.proto";

message KdTreeConfig {
  enum SplittingStrategyData {
    MIDPOINT = 0;
  }

  optional SplittingStrategyData splitting_strategy = 1 [default = MIDPOINT];
  optional int32 visualization_depth = 2 [default = -1];
  optional ColorData visualization_color = 3;
}

message SceneConfig {
  // Absence of one of these means that no KdTree will be used.
  optional KdTreeConfig kd_tree_config = 1;

  // A container for the items of the scene, including lights, elements etc.
  optional SceneData scene_data = 2;
}